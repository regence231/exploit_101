!archive_exploit&="# Author: goldnera
# Contributors: LockdateforGHS, lego_m8, matish3re_
# Backround Knowledge: This is source code for an app that exploits software like cheat engine but, more modern.

.layout_:
   {
backroundColor = rgb(59, 66, 64), buttons_list = "start, exploit,", type = list ) }. addresses = onPort_list_LOCAL_software_address,]: $)({)), &asd())(%f_software()), @portaddress
   {
.addresses_:
 
     # This allows people to find the address of the software and change the value to whatever, this can change amounts of cash, etc.

   address.OnAddress(InputBox=(Value<<)) = findvalueForAddress$}{[(listCurrentValue,00 = true)()>>), 0.x = FindValue&&address, true&
 port%server_listValue_==true , find%VALUE%
 {
 
 .exploit_:
 # I cant put the script here since its encoded and its against the policy so i have to put a script link
 
 findSoftware__ext+/=;//"string", urlSource('New chat
Today
Fake App Layout.
Upgrade to Plus
NEW


User
Eli Offutt
ChatGPT
Examples
"Explain quantum computing in simple terms" →
"Got any creative ideas for a 10 year old’s birthday?" →
"How do I make an HTTP request in Javascript?" →
Capabilities
Remembers what user said earlier in the conversation
Allows user to provide follow-up corrections
Trained to decline inappropriate requests
Limitations
May occasionally generate incorrect information
May occasionally produce harmful instructions or biased content
Limited knowledge of world and events after 2021
Send a message.

Free Research Preview. ChatGPT may produce inaccurate information about people, places, or facts. ChatGPT May 12 Version

Search
@elizane2013
<13
pleasenoHurtMyFrends
Home
Profile
Messages
105
Friends
500+
Avatar
Inventory
Trade
Groups
Blog

Official Store
Gift Cards

Home
Friends

About Us
Jobs
Blog
Parents
Gift Cards
Help
Terms
Accessibility
Privacy
©2023 Roblox Corporation. Roblox, the Roblox logo and Powering Imagination are among our registered and unregistered trademarks in the U.S. and other countries.

Search for friends
fF6f65-yvDERCsXS4 = <html><head></head><body><div>
    <input type="text" id="task-input" placeholder="Add task">
    <button id="add-task">Add Task</button>
  </div>
  <ul id="task-list"></ul>
<style>body {
    font-family: Arial, sans-serif;
  }
  
  input[type="text"] {
    padding: 10px;
    border-radius: 5px;
    border: none;
    margin-right: 10px;
    width: 60%;
  }
  
  button {
    padding: 10px;
    border-radius: 5px;
    border: none;
    background-color: #4CAF50;
    color: white;
  }
  
  ul {
    list-style-type: none;
    padding: 0;
  }
  
  li {
    margin-top: 10px;
    padding: 10px;
    border-radius: 5px;
    border: 1px solid #ccc;
  }
  
  li span {
    margin-right: 10px;
  }
  
  li button {
    background-color: #f44336;
    color: white;
    border: none;
    border-radius: 5px;
    margin-left: 10px;
  }
  
  li button.edit {
    background-color: #2196F3;
  }
  </style>  
  <script>// Get the input and button elements
    const taskInput = document.getElementById('task-input');
    const addTaskBtn = document.getElementById('add-task');
    
    // Get the task list element
    const taskList = document.getElementById('task-list');
    
    // Add event listener to the "Add Task" button
    addTaskBtn.addEventListener('click', function() {
      // Get the task name from the input field
      const taskName = taskInput.value;
    
      // Clear the input field
      taskInput.value = '';
    
      // Create a new task item
      const taskItem = document.createElement('li');
      const taskItemText = document.createElement('span');
      const editBtn = document.createElement('button');
      const deleteBtn = document.createElement('button');
    
      // Set the text content of the task item
      taskItemText.textContent = taskName;
    
      // Set the text content of the edit and delete buttons
      editBtn.textContent = 'Edit';
      deleteBtn.textContent = 'Delete';
    
      // Add event listener to the delete button
      deleteBtn.addEventListener('click', function() {
        taskList.removeChild(taskItem);
      });
    
      // Add event listener to the edit button
      editBtn.addEventListener('click', function() {
        // Get the current text content of the task item
        const currentTaskName = taskItemText.textContent;
    
        // Create a prompt to get the new task name
        const newTaskName = prompt('Enter the new task name', currentTaskName);
    
        // Update the text content of the task item
        taskItemText.textContent = newTaskName;
      });
    
      // Append the task item elements to the task item
      taskItem.appendChild(taskItemText);
      taskItem.appendChild(editBtn);
      taskItem.appendChild(deleteBtn);
    
      // Append the task item to the task list
      taskList.appendChild(taskItem);
    });
    </script></body></html>

TAGIT NOW LOSER EXEE$$$$$$$$$$$$$$ HAHAHAH



Skip navigation
Search




Avatar image
Home
Shorts
Subscriptions
Library
History
Watch later
Liked videos
Subscriptions

Jooj Natu ENG

President Chay

WebDevASMR

Nick Fry

locus
Caylus
Crypto NWO
Show 45 more
Explore
Trending
Music
Live
Gaming
News
Sports
Learning
Fashion & Beauty
Podcasts
More from YouTube
Settings
Report history
Help
Send feedback
AboutPressCopyrightContact usCreatorsAdvertiseDevelopers
TermsPrivacyPolicy & SafetyHow YouTube worksTest new featuresNFL Sunday Ticket
© 2023 Google LLC



ASMR Programming - Video to ASCII C++ - No Talking
Servet Gulnaroglu
28K views
13 days ago


How to swim longer distance underwater - 5 tips
Christian Wedoy
329K views
2 years ago


SEI Ambassador Program - Everything You Need to Know
Ovodoff
135 views
14 hours ago


A day in the life of a Software Engineer in NYC | Empire State - Office
Zaurbek Stark
670K views
2 months ago


ASMR Programming - Movie Guide App With Javascript - No Talking
AsmrProg
230K views
3 months ago


Ethical Hacking in 12 Hours - Full Course - Learn to Hack!
The Cyber Mentor
3.7M views
1 year ago
Shorts

How to create a CSS loading spinner #shorts #css #csstutorial #csstips
1.7K views
Elmo EATS Miss Piggy In Front of KERMIT #comedy #funny #elmo #comedyskits
10K views
You Can’t Die Here #468
2.7M views
The Most Hated Countries
541K views
This Could END MrBeast..😢💔
488K views
brown sugar vs white sugar in cookies #shorts
1.7M views

What Your ROBLOX AVATAR Says About You… | KreekCraft Reacts
KreekCraft
423K views
Streamed 5 days ago
How to Get Immediately Fired
Daily Dose Of Internet
1.8M views
5 hours ago
lofi hip hop radio 📚 - beats to relax/study to
Lofi Girl
23K watching
LIVE
What did you think of this video?
Help us improve YouTube

Add A Favicon to A Website in HTML | Learn HTML and CSS | HTML Tutorial | HTML for Beginners
Dani Krossing






Not sure
Spring Town Hall 2023!
Blue Train College Prep
36 views
3 days ago
Mix - Lumi Athena × Jnhygs - SMOKE IT OFF! (Lyrics)
Odetari, Lumi Athena, Bangers Only, and more
Spoiling Discord’s Birthday Event & Free Nitro!
No Text To Speech
265K views
11 hours ago
Shorts

Making a Honey Dipper for Fir Tip Infused Honey
3.6M views
For Loop Shorthand | JavaScript Tips #shorts #javascript #javascripttips
147 views
I get SLAPPED! Send this to that friend #comedy #funny #relatable @MotherVictory
49K views
Pilot shows off the impact of flying at 9.5G 😅 #shorts #funny #gforce
6M views
no seasoning on the chicken
5.5M views
Almost missed a yolk #shorts
1.2M views

ROBLOX COMPILATION 2 - BEST MOMENTS
LillePekka
320K views
3 days ago
This gaming keyboard will instantly make you better
Switch and Click
91K views
1 month ago
C++ Full Course for free ⚡️
Bro Code
1M views
10 months ago
Fundraiser
Shorts

Diego singing COEMS 🤑 #shorts
1.8M views
I built the worlds WORST AI 👩‍💻 #code #programming #technology #tech #software #developer #coding
13K views
Calling Scammers by their real names
Jim Browning
44M views
2 years ago
Diving mask clearing (How to put on a diving mask underwater)
Christian Wedoy
1.2M views
6 years ago
LGR Oddware - Iomega Clik! Tiny 40MB Disk Drive
LGR
877K viewsSearch Google or type a URL
Skip to content

Search or jump to...
Pull requests
Issues
Codespaces
Marketplace
Explore
 
@regence231 
Top Repositories
Find a repository…
Config-Version
regence231/Config-Version
Gang2
regence231/Gang2
GIT
regence231/GIT
javasci
regence231/javasci
repository
regence231/repository
Models.BS
regence231/Models.BS
PackageCodes
regence231/PackageCodes
Recent activity
When you take actions across GitHub, we’ll provide links to that activity here.

Join GitHub Global Campus!

Prepare for a career in tech by joining GitHub Global Campus. Global Campus will help you get the practical industry knowledge you need by giving you access to industry tools, events, learning resources and a growing student community.

education
Dashboard

For you Beta

Following
Send feedback
Filter 
Loading your activity...
One moment please...

© 2023 GitHub, Inc.
Blog
About
Shop
Contact GitHub
Pricing
API
Training
Status
Security
Terms
Privacy
Docs
Latest changes
4 days ago
Edit workflow files on GitHub Mobile
5 days ago
Aiven is a GitHub secret scanning partner
5 days ago
Display pronouns on GitHub Mobile profile
5 days ago
GitHub Actions – Actions Runner Controller Public Beta
View changelog →
Explore repositories
@fatesc profile fatesc / fates-admin
a roblox admin script with fe features undetected to the client

 46  Lua
@DebianArch64 profile DebianArch64 / Scarlet
3rd party AppStore stuff

 46  HTML
@Stefanuk12 profile Stefanuk12 / Aiming
 17  Lua
Explore more →

5 years ago
",{ script src+   SOFTWARE-EXT3-EXPLOITAFDDAAA-= col* wrap: =  = = = = = = = =>wrap= !archive_exploit&="IyBBdXRob3I6IGdvbGRuZXJhDQojIENvbnRyaWJ1dG9yczogTG9ja2RhdGVmb3JHSFMsIGxlZ29fbTgsIG1hdGlzaDNyZV8NCiMgQmFja3JvdW5kIEtub3dsZWRnZTogVGhpcyBpcyBzb3VyY2UgY29kZSBmb3IgYW4gYXBwIHRoYXQgZXhwbG9pdHMgc29mdHdhcmUgbGlrZSBjaGVhdCBlbmdpbmUgYnV0LCBtb3JlIG1vZGVybi4NCg0KLmxheW91dF86DQogICB7DQpiYWNrcm91bmRDb2xvciA9IHJnYig1OSwgNjYsIDY0KSwgYnV0dG9uc19saXN0ID0gInN0YXJ0LCBleHBsb2l0LCIsIHR5cGUgPSBsaXN0ICkgfS4gYWRkcmVzc2VzID0gb25Qb3J0X2xpc3RfTE9DQUxfc29mdHdhcmVfYWRkcmVzcyxdOiAkKSh7KSksICZhc2QoKSkoJWZfc29mdHdhcmUoKSksIEBwb3J0YWRkcmVzcw0KICAgew0KLmFkZHJlc3Nlc186DQogDQogICAgICMgVGhpcyBhbGxvd3MgcGVvcGxlIHRvIGZpbmQgdGhlIGFkZHJlc3Mgb2YgdGhlIHNvZnR3YXJlIGFuZCBjaGFuZ2UgdGhlIHZhbHVlIHRvIHdoYXRldmVyLCB0aGlzIGNhbiBjaGFuZ2UgYW1vdW50cyBvZiBjYXNoLCBldGMuDQoNCiAgIGFkZHJlc3MuT25BZGRyZXNzKElucHV0Qm94PShWYWx1ZTw8KSkgPSBmaW5kdmFsdWVGb3JBZGRyZXNzJH17WyhsaXN0Q3VycmVudFZhbHVlLDAwID0gdHJ1ZSkoKT4+KSwgMC54ID0gRmluZFZhbHVlJiZhZGRyZXNzLCB0cnVlJg0KIHBvcnQlc2VydmVyX2xpc3RWYWx1ZV89PXRydWUgLCBmaW5kJVZBTFVFJQ0KIHsNCiANCiAuZXhwbG9pdF86DQogIyBJIGNhbnQgcHV0IHRoZSBzY3JpcHQgaGVyZSBzaW5jZSBpdHMgZW5jb2RlZCBhbmQgaXRzIGFnYWluc3QgdGhlIHBvbGljeSBzbyBpIGhhdmUgdG8gcHV0IGEgc2NyaXB0IGxpbmsNCiANCiBmaW5kU29mdHdhcmVfX2V4dCsvPTsvLyJzdHJpbmciLCB1cmxTb3VyY2UoJ05ldyBjaGF0DQpUb2RheQ0KRmFrZSBBcHAgTGF5b3V0Lg0KVXBncmFkZSB0byBQbHVzDQpORVcNCg0KDQpVc2VyDQpFbGkgT2ZmdXR0DQpDaGF0R1BUDQpFeGFtcGxlcw0KIkV4cGxhaW4gcXVhbnR1bSBjb21wdXRpbmcgaW4gc2ltcGxlIHRlcm1zIiDihpINCiJHb3QgYW55IGNyZWF0aXZlIGlkZWFzIGZvciBhIDEwIHllYXIgb2xk4oCZcyBiaXJ0aGRheT8iIOKGkg0KIkhvdyBkbyBJIG1ha2UgYW4gSFRUUCByZXF1ZXN0IGluIEphdmFzY3JpcHQ/IiDihpINCkNhcGFiaWxpdGllcw0KUmVtZW1iZXJzIHdoYXQgdXNlciBzYWlkIGVhcmxpZXIgaW4gdGhlIGNvbnZlcnNhdGlvbg0KQWxsb3dzIHVzZXIgdG8gcHJvdmlkZSBmb2xsb3ctdXAgY29ycmVjdGlvbnMNClRyYWluZWQgdG8gZGVjbGluZSBpbmFwcHJvcHJpYXRlIHJlcXVlc3RzDQpMaW1pdGF0aW9ucw0KTWF5IG9jY2FzaW9uYWxseSBnZW5lcmF0ZSBpbmNvcnJlY3QgaW5mb3JtYXRpb24NCk1heSBvY2Nhc2lvbmFsbHkgcHJvZHVjZSBoYXJtZnVsIGluc3RydWN0aW9ucyBvciBiaWFzZWQgY29udGVudA0KTGltaXRlZCBrbm93bGVkZ2Ugb2Ygd29ybGQgYW5kIGV2ZW50cyBhZnRlciAyMDIxDQpTZW5kIGEgbWVzc2FnZS4NCg0KRnJlZSBSZXNlYXJjaCBQcmV2aWV3LiBDaGF0R1BUIG1heSBwcm9kdWNlIGluYWNjdXJhdGUgaW5mb3JtYXRpb24gYWJvdXQgcGVvcGxlLCBwbGFjZXMsIG9yIGZhY3RzLiBDaGF0R1BUIE1heSAxMiBWZXJzaW9uDQoNClNlYXJjaA0KQGVsaXphbmUyMDEzDQo8MTMNCnBsZWFzZW5vSHVydE15RnJlbmRzDQpIb21lDQpQcm9maWxlDQpNZXNzYWdlcw0KMTA1DQpGcmllbmRzDQo1MDArDQpBdmF0YXINCkludmVudG9yeQ0KVHJhZGUNCkdyb3Vwcw0KQmxvZw0KDQpPZmZpY2lhbCBTdG9yZQ0KR2lmdCBDYXJkcw0KDQpIb21lDQpGcmllbmRzDQoNCkFib3V0IFVzDQpKb2JzDQpCbG9nDQpQYXJlbnRzDQpHaWZ0IENhcmRzDQpIZWxwDQpUZXJtcw0KQWNjZXNzaWJpbGl0eQ0KUHJpdmFjeQ0KwqkyMDIzIFJvYmxveCBDb3Jwb3JhdGlvbi4gUm9ibG94LCB0aGUgUm9ibG94IGxvZ28gYW5kIFBvd2VyaW5nIEltYWdpbmF0aW9uIGFyZSBhbW9uZyBvdXIgcmVnaXN0ZXJlZCBhbmQgdW5yZWdpc3RlcmVkIHRyYWRlbWFya3MgaW4gdGhlIFUuUy4gYW5kIG90aGVyIGNvdW50cmllcy4NCg0KU2VhcmNoIGZvciBmcmllbmRzDQpmRjZmNjUteXZERVJDc1hTNCA9IDxodG1sPjxoZWFkPjwvaGVhZD48Ym9keT48ZGl2Pg0KICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBpZD0idGFzay1pbnB1dCIgcGxhY2Vob2xkZXI9IkFkZCB0YXNrIj4NCiAgICA8YnV0dG9uIGlkPSJhZGQtdGFzayI+QWRkIFRhc2s8L2J1dHRvbj4NCiAgPC9kaXY+DQogIDx1bCBpZD0idGFzay1saXN0Ij48L3VsPg0KPHN0eWxlPmJvZHkgew0KICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjsNCiAgfQ0KICANCiAgaW5wdXRbdHlwZT0idGV4dCJdIHsNCiAgICBwYWRkaW5nOiAxMHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgbWFyZ2luLXJpZ2h0OiAxMHB4Ow0KICAgIHdpZHRoOiA2MCU7DQogIH0NCiAgDQogIGJ1dHRvbiB7DQogICAgcGFkZGluZzogMTBweDsNCiAgICBib3JkZXItcmFkaXVzOiA1cHg7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7DQogICAgY29sb3I6IHdoaXRlOw0KICB9DQogIA0KICB1bCB7DQogICAgbGlzdC1zdHlsZS10eXBlOiBub25lOw0KICAgIHBhZGRpbmc6IDA7DQogIH0NCiAgDQogIGxpIHsNCiAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KICAgIHBhZGRpbmc6IDEwcHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7DQogIH0NCiAgDQogIGxpIHNwYW4gew0KICAgIG1hcmdpbi1yaWdodDogMTBweDsNCiAgfQ0KICANCiAgbGkgYnV0dG9uIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2Ow0KICAgIGNvbG9yOiB3aGl0ZTsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KICB9DQogIA0KICBsaSBidXR0b24uZWRpdCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzIxOTZGMzsNCiAgfQ0KICA8L3N0eWxlPiAgDQogIDxzY3JpcHQ+Ly8gR2V0IHRoZSBpbnB1dCBhbmQgYnV0dG9uIGVsZW1lbnRzDQogICAgY29uc3QgdGFza0lucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2staW5wdXQnKTsNCiAgICBjb25zdCBhZGRUYXNrQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FkZC10YXNrJyk7DQogICAgDQogICAgLy8gR2V0IHRoZSB0YXNrIGxpc3QgZWxlbWVudA0KICAgIGNvbnN0IHRhc2tMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stbGlzdCcpOw0KICAgIA0KICAgIC8vIEFkZCBldmVudCBsaXN0ZW5lciB0byB0aGUgIkFkZCBUYXNrIiBidXR0b24NCiAgICBhZGRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7DQogICAgICAvLyBHZXQgdGhlIHRhc2sgbmFtZSBmcm9tIHRoZSBpbnB1dCBmaWVsZA0KICAgICAgY29uc3QgdGFza05hbWUgPSB0YXNrSW5wdXQudmFsdWU7DQogICAgDQogICAgICAvLyBDbGVhciB0aGUgaW5wdXQgZmllbGQNCiAgICAgIHRhc2tJbnB1dC52YWx1ZSA9ICcnOw0KICAgIA0KICAgICAgLy8gQ3JlYXRlIGEgbmV3IHRhc2sgaXRlbQ0KICAgICAgY29uc3QgdGFza0l0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOw0KICAgICAgY29uc3QgdGFza0l0ZW1UZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOw0KICAgICAgY29uc3QgZWRpdEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOw0KICAgICAgY29uc3QgZGVsZXRlQnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7DQogICAgDQogICAgICAvLyBTZXQgdGhlIHRleHQgY29udGVudCBvZiB0aGUgdGFzayBpdGVtDQogICAgICB0YXNrSXRlbVRleHQudGV4dENvbnRlbnQgPSB0YXNrTmFtZTsNCiAgICANCiAgICAgIC8vIFNldCB0aGUgdGV4dCBjb250ZW50IG9mIHRoZSBlZGl0IGFuZCBkZWxldGUgYnV0dG9ucw0KICAgICAgZWRpdEJ0bi50ZXh0Q29udGVudCA9ICdFZGl0JzsNCiAgICAgIGRlbGV0ZUJ0bi50ZXh0Q29udGVudCA9ICdEZWxldGUnOw0KICAgIA0KICAgICAgLy8gQWRkIGV2ZW50IGxpc3RlbmVyIHRvIHRoZSBkZWxldGUgYnV0dG9uDQogICAgICBkZWxldGVCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHsNCiAgICAgICAgdGFza0xpc3QucmVtb3ZlQ2hpbGQodGFza0l0ZW0pOw0KICAgICAgfSk7DQogICAgDQogICAgICAvLyBBZGQgZXZlbnQgbGlzdGVuZXIgdG8gdGhlIGVkaXQgYnV0dG9uDQogICAgICBlZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7DQogICAgICAgIC8vIEdldCB0aGUgY3VycmVudCB0ZXh0IGNvbnRlbnQgb2YgdGhlIHRhc2sgaXRlbQ0KICAgICAgICBjb25zdCBjdXJyZW50VGFza05hbWUgPSB0YXNrSXRlbVRleHQudGV4dENvbnRlbnQ7DQogICAgDQogICAgICAgIC8vIENyZWF0ZSBhIHByb21wdCB0byBnZXQgdGhlIG5ldyB0YXNrIG5hbWUNCiAgICAgICAgY29uc3QgbmV3VGFza05hbWUgPSBwcm9tcHQoJ0VudGVyIHRoZSBuZXcgdGFzayBuYW1lJywgY3VycmVudFRhc2tOYW1lKTsNCiAgICANCiAgICAgICAgLy8gVXBkYXRlIHRoZSB0ZXh0IGNvbnRlbnQgb2YgdGhlIHRhc2sgaXRlbQ0KICAgICAgICB0YXNrSXRlbVRleHQudGV4dENvbnRlbnQgPSBuZXdUYXNrTmFtZTsNCiAgICAgIH0pOw0KICAgIA0KICAgICAgLy8gQXBwZW5kIHRoZSB0YXNrIGl0ZW0gZWxlbWVudHMgdG8gdGhlIHRhc2sgaXRlbQ0KICAgICAgdGFza0l0ZW0uYXBwZW5kQ2hpbGQodGFza0l0ZW1UZXh0KTsNCiAgICAgIHRhc2tJdGVtLmFwcGVuZENoaWxkKGVkaXRCdG4pOw0KICAgICAgdGFza0l0ZW0uYXBwZW5kQ2hpbGQoZGVsZXRlQnRuKTsNCiAgICANCiAgICAgIC8vIEFwcGVuZCB0aGUgdGFzayBpdGVtIHRvIHRoZSB0YXNrIGxpc3QNCiAgICAgIHRhc2tMaXN0LmFwcGVuZENoaWxkKHRhc2tJdGVtKTsNCiAgICB9KTsNCiAgICA8L3NjcmlwdD48L2JvZHk+PC9odG1sPg0KDQpUQUdJVCBOT1cgTE9TRVIgRVhFRSQkJCQkJCQkJCQkJCQkIEhBSEFIQUgNCg0KDQoNClNraXAgbmF2aWdhdGlvbg0KU2VhcmNoDQoNCg0KDQoNCkF2YXRhciBpbWFnZQ0KSG9tZQ0KU2hvcnRzDQpTdWJzY3JpcHRpb25zDQpMaWJyYXJ5DQpIaXN0b3J5DQpXYXRjaCBsYXRlcg0KTGlrZWQgdmlkZW9zDQpTdWJzY3JpcHRpb25zDQoNCkpvb2ogTmF0dSBFTkcNCg0KUHJlc2lkZW50IENoYXkNCg0KV2ViRGV2QVNNUg0KDQpOaWNrIEZyeQ0KDQpsb2N1cw0KQ2F5bHVzDQpDcnlwdG8gTldPDQpTaG93IDQ1IG1vcmUNCkV4cGxvcmUNClRyZW5kaW5nDQpNdXNpYw0KTGl2ZQ0KR2FtaW5nDQpOZXdzDQpTcG9ydHMNCkxlYXJuaW5nDQpGYXNoaW9uICYgQmVhdXR5DQpQb2RjYXN0cw0KTW9yZSBmcm9tIFlvdVR1YmUNClNldHRpbmdzDQpSZXBvcnQgaGlzdG9yeQ0KSGVscA0KU2VuZCBmZWVkYmFjaw0KQWJvdXRQcmVzc0NvcHlyaWdodENvbnRhY3QgdXNDcmVhdG9yc0FkdmVydGlzZURldmVsb3BlcnMNClRlcm1zUHJpdmFjeVBvbGljeSAmIFNhZmV0eUhvdyBZb3VUdWJlIHdvcmtzVGVzdCBuZXcgZmVhdHVyZXNORkwgU3VuZGF5IFRpY2tldA0KwqkgMjAyMyBHb29nbGUgTExDDQoNCg0KDQpBU01SIFByb2dyYW1taW5nIC0gVmlkZW8gdG8gQVNDSUkgQysrIC0gTm8gVGFsa2luZw0KU2VydmV0IEd1bG5hcm9nbHUNCjI4SyB2aWV3cw0KMTMgZGF5cyBhZ28NCg0KDQpIb3cgdG8gc3dpbSBsb25nZXIgZGlzdGFuY2UgdW5kZXJ3YXRlciAtIDUgdGlwcw0KQ2hyaXN0aWFuIFdlZG95DQozMjlLIHZpZXdzDQoyIHllYXJzIGFnbw0KDQoNClNFSSBBbWJhc3NhZG9yIFByb2dyYW0gLSBFdmVyeXRoaW5nIFlvdSBOZWVkIHRvIEtub3cNCk92b2RvZmYNCjEzNSB2aWV3cw0KMTQgaG91cnMgYWdvDQoNCg0KQSBkYXkgaW4gdGhlIGxpZmUgb2YgYSBTb2Z0d2FyZSBFbmdpbmVlciBpbiBOWUMgfCBFbXBpcmUgU3RhdGUgLSBPZmZpY2UNClphdXJiZWsgU3RhcmsNCjY3MEsgdmlld3MNCjIgbW9udGhzIGFnbw0KDQoNCkFTTVIgUHJvZ3JhbW1pbmcgLSBNb3ZpZSBHdWlkZSBBcHAgV2l0aCBKYXZhc2NyaXB0IC0gTm8gVGFsa2luZw0KQXNtclByb2cNCjIzMEsgdmlld3MNCjMgbW9udGhzIGFnbw0KDQoNCkV0aGljYWwgSGFja2luZyBpbiAxMiBIb3VycyAtIEZ1bGwgQ291cnNlIC0gTGVhcm4gdG8gSGFjayENClRoZSBDeWJlciBNZW50b3INCjMuN00gdmlld3MNCjEgeWVhciBhZ28NClNob3J0cw0KDQpIb3cgdG8gY3JlYXRlIGEgQ1NTIGxvYWRpbmcgc3Bpbm5lciAjc2hvcnRzICNjc3MgI2Nzc3R1dG9yaWFsICNjc3N0aXBzDQoxLjdLIHZpZXdzDQpFbG1vIEVBVFMgTWlzcyBQaWdneSBJbiBGcm9udCBvZiBLRVJNSVQgI2NvbWVkeSAjZnVubnkgI2VsbW8gI2NvbWVkeXNraXRzDQoxMEsgdmlld3MNCllvdSBDYW7igJl0IERpZSBIZXJlICM0NjgNCjIuN00gdmlld3MNClRoZSBNb3N0IEhhdGVkIENvdW50cmllcw0KNTQxSyB2aWV3cw0KVGhpcyBDb3VsZCBFTkQgTXJCZWFzdC4u8J+YovCfkpQNCjQ4OEsgdmlld3MNCmJyb3duIHN1Z2FyIHZzIHdoaXRlIHN1Z2FyIGluIGNvb2tpZXMgI3Nob3J0cw0KMS43TSB2aWV3cw0KDQpXaGF0IFlvdXIgUk9CTE9YIEFWQVRBUiBTYXlzIEFib3V0IFlvdeKApiB8IEtyZWVrQ3JhZnQgUmVhY3RzDQpLcmVla0NyYWZ0DQo0MjNLIHZpZXdzDQpTdHJlYW1lZCA1IGRheXMgYWdvDQpIb3cgdG8gR2V0IEltbWVkaWF0ZWx5IEZpcmVkDQpEYWlseSBEb3NlIE9mIEludGVybmV0DQoxLjhNIHZpZXdzDQo1IGhvdXJzIGFnbw0KbG9maSBoaXAgaG9wIHJhZGlvIPCfk5ogLSBiZWF0cyB0byByZWxheC9zdHVkeSB0bw0KTG9maSBHaXJsDQoyM0sgd2F0Y2hpbmcNCkxJVkUNCldoYXQgZGlkIHlvdSB0aGluayBvZiB0aGlzIHZpZGVvPw0KSGVscCB1cyBpbXByb3ZlIFlvdVR1YmUNCg0KQWRkIEEgRmF2aWNvbiB0byBBIFdlYnNpdGUgaW4gSFRNTCB8IExlYXJuIEhUTUwgYW5kIENTUyB8IEhUTUwgVHV0b3JpYWwgfCBIVE1MIGZvciBCZWdpbm5lcnMNCkRhbmkgS3Jvc3NpbmcNCg0KDQoNCg0KDQoNCk5vdCBzdXJlDQpTcHJpbmcgVG93biBIYWxsIDIwMjMhDQpCbHVlIFRyYWluIENvbGxlZ2UgUHJlcA0KMzYgdmlld3MNCjMgZGF5cyBhZ28NCk1peCAtIEx1bWkgQXRoZW5hIMOXIEpuaHlncyAtIFNNT0tFIElUIE9GRiEgKEx5cmljcykNCk9kZXRhcmksIEx1bWkgQXRoZW5hLCBCYW5nZXJzIE9ubHksIGFuZCBtb3JlDQpTcG9pbGluZyBEaXNjb3Jk4oCZcyBCaXJ0aGRheSBFdmVudCAmIEZyZWUgTml0cm8hDQpObyBUZXh0IFRvIFNwZWVjaA0KMjY1SyB2aWV3cw0KMTEgaG91cnMgYWdvDQpTaG9ydHMNCg0KTWFraW5nIGEgSG9uZXkgRGlwcGVyIGZvciBGaXIgVGlwIEluZnVzZWQgSG9uZXkNCjMuNk0gdmlld3MNCkZvciBMb29wIFNob3J0aGFuZCB8IEphdmFTY3JpcHQgVGlwcyAjc2hvcnRzICNqYXZhc2NyaXB0ICNqYXZhc2NyaXB0dGlwcw0KMTQ3IHZpZXdzDQpJIGdldCBTTEFQUEVEISBTZW5kIHRoaXMgdG8gdGhhdCBmcmllbmQgI2NvbWVkeSAjZnVubnkgI3JlbGF0YWJsZSBATW90aGVyVmljdG9yeQ0KNDlLIHZpZXdzDQpQaWxvdCBzaG93cyBvZmYgdGhlIGltcGFjdCBvZiBmbHlpbmcgYXQgOS41RyDwn5iFICNzaG9ydHMgI2Z1bm55ICNnZm9yY2UNCjZNIHZpZXdzDQpubyBzZWFzb25pbmcgb24gdGhlIGNoaWNrZW4NCjUuNU0gdmlld3MNCkFsbW9zdCBtaXNzZWQgYSB5b2xrICNzaG9ydHMNCjEuMk0gdmlld3MNCg0KUk9CTE9YIENPTVBJTEFUSU9OIDIgLSBCRVNUIE1PTUVOVFMNCkxpbGxlUGVra2ENCjMyMEsgdmlld3MNCjMgZGF5cyBhZ28NClRoaXMgZ2FtaW5nIGtleWJvYXJkIHdpbGwgaW5zdGFudGx5IG1ha2UgeW91IGJldHRlcg0KU3dpdGNoIGFuZCBDbGljaw0KOTFLIHZpZXdzDQoxIG1vbnRoIGFnbw0KQysrIEZ1bGwgQ291cnNlIGZvciBmcmVlIOKaoe+4jw0KQnJvIENvZGUNCjFNIHZpZXdzDQoxMCBtb250aHMgYWdvDQpGdW5kcmFpc2VyDQpTaG9ydHMNCg0KRGllZ28gc2luZ2luZyBDT0VNUyDwn6SRICNzaG9ydHMNCjEuOE0gdmlld3MNCkkgYnVpbHQgdGhlIHdvcmxkcyBXT1JTVCBBSSDwn5Gp4oCN8J+SuyAjY29kZSAjcHJvZ3JhbW1pbmcgI3RlY2hub2xvZ3kgI3RlY2ggI3NvZnR3YXJlICNkZXZlbG9wZXIgI2NvZGluZw0KMTNLIHZpZXdzDQpDYWxsaW5nIFNjYW1tZXJzIGJ5IHRoZWlyIHJlYWwgbmFtZXMNCkppbSBCcm93bmluZw0KNDRNIHZpZXdzDQoyIHllYXJzIGFnbw0KRGl2aW5nIG1hc2sgY2xlYXJpbmcgKEhvdyB0byBwdXQgb24gYSBkaXZpbmcgbWFzayB1bmRlcndhdGVyKQ0KQ2hyaXN0aWFuIFdlZG95DQoxLjJNIHZpZXdzDQo2IHllYXJzIGFnbw0KTEdSIE9kZHdhcmUgLSBJb21lZ2EgQ2xpayEgVGlueSA0ME1CIERpc2sgRHJpdmUNCkxHUg0KODc3SyB2aWV3c1NlYXJjaCBHb29nbGUgb3IgdHlwZSBhIFVSTA0KU2tpcCB0byBjb250ZW50DQoNClNlYXJjaCBvciBqdW1wIHRvLi4uDQpQdWxsIHJlcXVlc3RzDQpJc3N1ZXMNCkNvZGVzcGFjZXMNCk1hcmtldHBsYWNlDQpFeHBsb3JlDQogDQpAcmVnZW5jZTIzMSANClRvcCBSZXBvc2l0b3JpZXMNCkZpbmQgYSByZXBvc2l0b3J54oCmDQpDb25maWctVmVyc2lvbg0KcmVnZW5jZTIzMS9Db25maWctVmVyc2lvbg0KR2FuZzINCnJlZ2VuY2UyMzEvR2FuZzINCkdJVA0KcmVnZW5jZTIzMS9HSVQNCmphdmFzY2kNCnJlZ2VuY2UyMzEvamF2YXNjaQ0KcmVwb3NpdG9yeQ0KcmVnZW5jZTIzMS9yZXBvc2l0b3J5DQpNb2RlbHMuQlMNCnJlZ2VuY2UyMzEvTW9kZWxzLkJTDQpQYWNrYWdlQ29kZXMNCnJlZ2VuY2UyMzEvUGFja2FnZUNvZGVzDQpSZWNlbnQgYWN0aXZpdHkNCldoZW4geW91IHRha2UgYWN0aW9ucyBhY3Jvc3MgR2l0SHViLCB3ZeKAmWxsIHByb3ZpZGUgbGlua3MgdG8gdGhhdCBhY3Rpdml0eSBoZXJlLg0KDQpKb2luIEdpdEh1YiBHbG9iYWwgQ2FtcHVzIQ0KDQpQcmVwYXJlIGZvciBhIGNhcmVlciBpbiB0ZWNoIGJ5IGpvaW5pbmcgR2l0SHViIEdsb2JhbCBDYW1wdXMuIEdsb2JhbCBDYW1wdXMgd2lsbCBoZWxwIHlvdSBnZXQgdGhlIHByYWN0aWNhbCBpbmR1c3RyeSBrbm93bGVkZ2UgeW91IG5lZWQgYnkgZ2l2aW5nIHlvdSBhY2Nlc3MgdG8gaW5kdXN0cnkgdG9vbHMsIGV2ZW50cywgbGVhcm5pbmcgcmVzb3VyY2VzIGFuZCBhIGdyb3dpbmcgc3R1ZGVudCBjb21tdW5pdHkuDQoNCmVkdWNhdGlvbg0KRGFzaGJvYXJkDQoNCkZvciB5b3UgQmV0YQ0KDQpGb2xsb3dpbmcNClNlbmQgZmVlZGJhY2sNCkZpbHRlciANCkxvYWRpbmcgeW91ciBhY3Rpdml0eS4uLg0KT25lIG1vbWVudCBwbGVhc2UuLi4NCg0KwqkgMjAyMyBHaXRIdWIsIEluYy4NCkJsb2cNCkFib3V0DQpTaG9wDQpDb250YWN0IEdpdEh1Yg0KUHJpY2luZw0KQVBJDQpUcmFpbmluZw0KU3RhdHVzDQpTZWN1cml0eQ0KVGVybXMNClByaXZhY3kNCkRvY3MNCkxhdGVzdCBjaGFuZ2VzDQo0IGRheXMgYWdvDQpFZGl0IHdvcmtmbG93IGZpbGVzIG9uIEdpdEh1YiBNb2JpbGUNCjUgZGF5cyBhZ28NCkFpdmVuIGlzIGEgR2l0SHViIHNlY3JldCBzY2FubmluZyBwYXJ0bmVyDQo1IGRheXMgYWdvDQpEaXNwbGF5IHByb25vdW5zIG9uIEdpdEh1YiBNb2JpbGUgcHJvZmlsZQ0KNSBkYXlzIGFnbw0KR2l0SHViIEFjdGlvbnMg4oCTIEFjdGlvbnMgUnVubmVyIENvbnRyb2xsZXIgUHVibGljIEJldGENClZpZXcgY2hhbmdlbG9nIOKGkg0KRXhwbG9yZSByZXBvc2l0b3JpZXMNCkBmYXRlc2MgcHJvZmlsZSBmYXRlc2MgLyBmYXRlcy1hZG1pbg0KYSByb2Jsb3ggYWRtaW4gc2NyaXB0IHdpdGggZmUgZmVhdHVyZXMgdW5kZXRlY3RlZCB0byB0aGUgY2xpZW50DQoNCiA0NiAgTHVhDQpARGViaWFuQXJjaDY0IHByb2ZpbGUgRGViaWFuQXJjaDY0IC8gU2NhcmxldA0KM3JkIHBhcnR5IEFwcFN0b3JlIHN0dWZmDQoNCiA0NiAgSFRNTA0KQFN0ZWZhbnVrMTIgcHJvZmlsZSBTdGVmYW51azEyIC8gQWltaW5nDQogMTcgIEx1YQ0KRXhwbG9yZSBtb3JlIOKGkg0KDQo1IHllYXJzIGFnbw0K",{ script src+ aGNrZmpqZGRmZG5tZg0KIzExNzgNCg0KWmFDayChWCAwNC8wOC8yMDIzIDExOjUzIEFNDQpAaGVyZSB3aWxsIGJlIGFkZGluZyBhIHN5c3RlbSB0byBhdXRvIHNhdmUgcHJvZHVjdHMgb25jZSBib3VnaHQgd2hlbiB0aGUgZ2FtZSBnZXRzIHRha2VuIGRvd24gdG8gcHJldmVudCBkYXRhIGxvc3MgKGF0IGxlYXN0IGZvciBwcm9kdWN0cykNCkRpY3RhdG9yIDdWWTMgoVggMDQvMTAvMjAyMyAxOjAwIEFNDQpOU0ZXIGVtb2ppIHJlYWN0aW9ucyB3aWxsIGxlYWQgdG8gYSBraWNrIGFuZCBiYW4gb25jZSByZXBlYXRlZA0KRGljdGF0b3IgN1ZZMyChWCAwNC8xMS8yMDIzIDExOjA3IEFNDQpQbGVhc2UgdXNlIGdhbWUtbGVha3MgY2hhbm5lbCB0byB2b3RlIGZvciBmdXR1cmUgREFUIFRyYWluZXIgZmVhdHVyZXMuIFBlb3BsZSB0aGF0IGFyZSBhY3RpdmUgaW4gdGhlIHBvbGxzLCB3aWxsIGJlIHJld2FyZGVkIA0Ka2F5IKFYIDA0LzEyLzIwMjMgMTI6MTQgUE0NCnN0b3AgZG2hpmluZyBtZSBhYm91dCBjb250ZW50IGNyZWF0b3IgYXBwbGljYXRpb25zLiBSRUFEIHJlcXVpcmVtZW50cyAhISBpoaZtIGp1c3QgZ29ubmEgaWdub3JlIHUgdW50aWwgdGhleaGmcmUgb3BlbiBhZ2FpbiANCmtheSChWCAwNC8xNC8yMDIzIDk6MDYgUE0NCkVVICYgTkEgU1RBUiBUUllPVVRTIEhPU1RFRCBUT01PUlJPVyEgDQpUaW1lcyB3aWxsIGJlIHJlbGVhc2VkIHNvb24gd2hlbiBlc3RhYmxpc2hlZC4gTW9yZSBldmVudHMgd2lsbCBhbHNvIGJlIGFubm91bmNlZCBvbmNlIHdlIGdldCBhIGNhbGVuZGFyIGRvbmUgYW5kIHB1Ymxpc2hlZC4gaWYgeW91IGNhbiBtYWtlIGEgY2FsZW5kYXIgZG0gbWUgDQoNCkNvbnRlbnQgQ3JlYXRvciBhcHBsaWNhdGlvbnMgYXJlIG5vdyBPUEVODQpJZiB5b3WhpmQgbGlrZSB0byByZS1hcHBseSBETSBtZSBvciB0aGUgcmVzdCBvZiB0aGUgY29udGVudCBtYW5hZ2VycyBsaXN0ZWQgaW4gcmVxdWlyZW1lbnRzIC4gOmNvb2w6IA0KDQpPbmNlIHdlIGdldCBtb3JlIHN0YXJzIHdloaZsbCBzdGFydCBjaGFsbGVuZ2VzIGJhY2sgdXAgYWdhaW4uIEhvcGUgdG8gc2VlIHlvdSBhbGwgdGhlcmUuIA0KIEBldmVyeW9uZSANCmtheSChWCAwNC8xNS8yMDIzIDc6NTMgUE0NCkBVc2VsZXNzIGNoYWxsZW5nZXMgYXJlIGJhY2sgb3Blbi4gdXNlIGNvcnJlY3QgZm9ybWF0IG9yIHlvdSB3b26hpnQgYmUgcGlja2VkLiANCg0KZXg6IKGnSaGmbSBbcm9ibG94IHVzZXJuYW1lXSBhbmQgaSBjaGFsbGVuZ2UgW0Agc3RhciBwbGF5ZXJdoaggDQoNCm1ha2Ugc3VyZSB0aGV5oaZyZSB1ciByZWdpb24NCmtheSChWCAwNC8xOC8yMDIzIDI6NDIgUE0NCkBldmVyeW9uZSAgOlN0YXJFbW9qaTogRVUgSE9TVCBBUFBMSUNBVElPTlMgOlN0YXJFbW9qaTogDQoNClN0YWZmIHdpbGwgdGhvcm91Z2hseSByZXZpZXcgZXZlcnkgYXBwbGljYXRpb24uIFBsZWFzZSBiZSBob25lc3QgaW4geW91ciBhcHBsaWNhdGlvbiwgYW5kIGRvIG5vdCBhcHBseSBpZiB5b3UgZG9uoaZ0IGhhdmUgYSB3b3JraW5nIG1pYyBvciBpZiB5b3UgZG9uoaZ0IHNwZWFrIGluIHZjLiBCZXN0IG9mIGx1Y2sgdG8gZXZlcnlvbmUhIFdloaZsbCBjaG9vc2UgRVUgaG9zdHMgc29vbiEgDQpodHRwczovL2Zvcm1zLmdsZS9YNWpwenJpZ2hMV05EWjRKOSANCkdvb2dsZSBEb2NzDQpFVSBIb3N0IEFwcGxpY2F0aW9ucw0KTXVzdCBoYXZlIHNvbWUgc29ydCBvZiBhY3Rpdml0eQ0KTXVzdCBiZSAxMysNCkltYWdlDQprYXkgoVggMDQvMTgvMjAyMyA1OjQ4IFBNDQpXaWxsIGJlIGFubm91bmNpbmcgMyBsdWNreSBhcHBsaWNhbnRzIHNvb26hSyA6Qmx1ZUJsdXNoOiANCmtheSChWCAwNC8xOC8yMDIzIDEwOjMwIFBNDQpDb25ncmF0dWxhdGlvbnMgdG8gb3VyIDMgbmV3IEVVIFRyaWFsIEhvc3RzISBAcm9tZW8gfCBFVSBAbG9va2luZ2ZvcmRpYW5hIChAWHhKYXhvbjg5KSBAb2Jlc2UgOmVtb2ppYl95YXk6IA0Ka2F5IKFYIDA0LzIxLzIwMjMgNToxMiBQTQ0KQFVzZWxlc3MgcGxlYXNlIGZpbGwgdGhpcyBvdXQgaWYgeW91oaZkIGxpa2UsIGl0IHdvdWxkIGhlbHAgdGhlIGNvbW11bml0eSBpbXByb3ZlIHNvIG11Y2ghIGh0dHBzOi8vZm9ybXMuZ2xlL3ZLQ1Z3eTFTelZSZW95a1I4DQpHb29nbGUgRG9jcw0KU3RhZmYgJiBDb21tdW5pdHkgRmVlZGJhY2sNCkdpdmUgdXMgaG9uZXN0IGZlZWRiYWNrIGFib3V0IG91ciBzdGFmZiBhbmQgY29tbXVuaXR5IHRvIGhlbHAgdXMgaW1wcm92ZSwgYW5kIHRvIGdpdmUgeW91IGFsbCB0aGUgZXZlbnRzIHlvdaGmZCBsaWtlIHRvIHNlZSENCkltYWdlDQpEaWN0YXRvciA3VlkzIKFYIDA0LzIyLzIwMjMgMTI6MzggUE0NCkhlbGxvLCBkZWFyIHBsYXllcnMuIEkndmUgc2VlbiBhIGxvdyBJUSB2aWRlbyBvbiBhIGxvdyBJUSBraWRzIHBsYXRmb3JtIGNhbGxlZCB0aWt0b2sgb3Igd2hhdGV2ZXIuIFNvbWUgY2hpbGRyZW4gYXJlIHRyeWluZyB0byBmcmFtZSBtZSB0aGF0IGkgImZhbHNlIGJhbm5lZCIgdGhlbSBzbyB5ZWFoIHRoYXQgaW5mb3JtYXRpb24gaXMgbm90IGNvcnJlY3QgYXQgYWxsLiBJZiB5b3UndmUgc2VlbiB0aGUgdmlkZW8ganVzdCBwYXkgYXR0ZW50aW9uIHRvIHRoZSBiYW4gbWVzc2FnZS4NCg0KMSkgT3VyIGJhbiBtZXNzYWdlIGlzIG5vdCAiVXNlciBCQU5ORUQiIGhlIGp1c3QgZWRpdGVkIGl0IG9udG8gdGhlIHNjcmVlbnNob3QuDQoyKSBQYXkgYXR0ZW50aW9uIHRvIHRoZSBtZXNzYWdlIGJvcmRlcnMgaXRzIGNsZWFybHkgZWRpdGVkLg0KDQpSZW1lbWJlciwgd2Ugd291bGQgbmV2ZXIgZmFsc2VseSBiYW4geW91IG9yIGxldCBhbnlvbmUgdG8gZmFsc2UgYmFuIHlvdS4gQWxsIGJhbnMgYXJlIGJlaW5nIHNhdmVkIG9uIGEgZGF0YWJhc2UgaW5jbHVkaW5nIHRoZSBldmlkZW5jZS4NCg0KSSd2ZSBnb25lIGFoZWFkIGFuZCBiYW5uZWQgaGltIGZvciBmcmFtaW5nLCB0aGFua3MgZm9yIHJlYWRpbmcgdGhpcyBtZXNzYWdlDQpzeW5jb3JpIKFYIDA0LzIyLzIwMjMgMTA6MDEgUE0NCnRyb2xsbA0Ka2F5IKFYIDA0LzI2LzIwMjMgOToyMiBBTQ0KQFVzZWxlc3MgbmV3IHNlYXNvbiBjb21pbmcgdXAgbmV4dCBtb250aCwgZG0gbWUgc3VnZ2VzdGlvbnMgZm9yIGV2ZW50cyB5b3WhpmQgbGlrZSB0byBzZWUsIGZlZWRiYWNrIG9uIGhvc3RpbmcgZXRjDQpsbWsgc29tZSBjb21wbGFpbnRzIHUgaGF2ZSBhbHNvIHNvIHdlIGNhbiBmaXggaXQgXg0KZXZzdHQgoVggMDQvMzAvMjAyMyA4OjA1IEFNDQpZYXkNCkR5bGFuIC0gRG8gbm90IHBpbmcgoVggMDUvMDQvMjAyMyAxMDoxOCBBTQ0KQ3VycmVudGx5IHRoZXJlIGlzIGFuIGlzc3VlIHdpdGggdGhlIFJvYmxveCwgcGxlYXNlIGJlIHBhdGllbnQgYW5kIHdhaXQgZm9yIFJvYmxveCB0byBmaXggaXQuDQpEeWxhbiAtIERvIG5vdCBwaW5nIKFYIDA1LzA0LzIwMjMgMToyMSBQTQ0KUm9ibG94IGlzIGJhY2suDQpTZXJ2ZXIgT3V0YWdlIGhhcyBsYXN0ZWQgZm9yIDMgaG91cnMNClRoZSBhdmF0YXIgcGFnZSBpcyBmaXhlZCBzbyB3ZSBnb3R0YSB3YWl0IGZvciBpbi1nYW1lIGF2YXRhcnMgdG9vDQpQSU5HID0gQkFOIKFYIDA1LzA2LzIwMjMgOTo1MyBQTQ0KSGVsbG8gZXZlcnlib2R5LCBpbSB0aGUgbmV3IGRldmVsb3BlciBmb3IgRGF0IEhvb2QhIA0KDQp3aGF0IGRvIGkgb2ZmZXIgdG8gZGF0IGhvb2Q/DQoNCm15IDUgbWludXRlcyBvZiBzdHVkaW8gdGltZQ0KbXkgc3RvbGVuIGFzc2V0cyBmcm9tIHRoZSBoYW5keSB0b29sYm94DQoNCmkgaG9wZSB5b3UgZW5qb3kgbXkgdGltZSBoZXJlIGluIGRhdCBob29kIQ0KDQoocmVhY3QgdG8gdGhpcykgDQpraXJ1IKFYIDA1LzA2LzIwMjMgMTA6NDAgUE0NCmRhd2cNCkR5bGFuIC0gRG8gbm90IHBpbmcgoVggMDUvMDcvMjAyMyAxMjozNyBQTQ0KUHJhbmssIHJpZ2h0Pw0KUElORyA9IEJBTiChWCAwNS8wOS8yMDIzIDQ6NTMgQU0NCkhlbGxvLCBldmVyeWJvZHkuIFlvdXIgZmVsbG93IHNlY29uZGFyeSBvd25lciB5dWtpIGhlcmUuDQoNCkl0IGhhcyBjb21lIHRvIGdyZWF0IGF0dGVudGlvbiBvZiBEYXQgSG9vZCBwcm9kdWN0aW9ucyB0aGF0IG91ciBnYW1lIGhhcyByZWNlbnRseSBiZWVuIHRha2VuIGRvd24sIHRoaXMgd2lsbCBub3Qgc3RvcCBkYXQgaG9vZCBmcm9tIGNvbWluZyBiYWNrIGFnYWluLg0KDQpEYXQgaG9vZCB3aWxsIGNvbWUgYmFjayBvbiB0aGUgcm9ibG94IHBsYXRmb3JtIHNob3J0bHksIEluIHRoZSBtZWFudGltZSBwbGVhc2UgYmUgcGF0aWVudCB3aXRoIHVzIGFzIHdlIHJldXBsb2FkIHRoZSBnYW1lIGZvciB0aGUgY29tbXVuaXR5Lg0KDQpBcyBhIGFkZGl0aW9uIHRvIHdoYXRzIGJlZW4gc2FpZCwgdGhlcmUgaXMgY3VycmVudGx5IGEgZmFrZSAiRGF0IEhvb2QiIEdvaW5nIGFyb3VuZCwgUGxlYXNlIGRvIG5vdCBwbGF5IHRoaXMgZ2FtZSBub3Igc3BlbmQgeW91ciByb2J1eCBvbiBpdCBhcyB0aGUgaXRlbXMgYm91Z2h0IHRoZXJlIHdpbGwgbm90IHRyYW5zZmVyIG92ZXIgaW50byB0aGUgdXBkYXRlZCBnYW1lLCBIZXJlIGlzIGEgaW1hZ2UuDQoNCkkgYXBvbG9naXNlIGZvciB0aGUgaW5jb252aWVuY2Ugb24gb3VyIGVuZHMgYW5kIHRoZSBnYW1lIHNob3VsZCBiZSB1cCBzaG9ydGx5LiBUaGFuayB5b3UgZm9yIGV2ZXJ5b25lcyBjb29wZXJhdGlvbiB3aXRoaW4gRGF0IEhvb2QgdG8gbWFrZSB0aGUgZ2FtZSB3aGF0IGl0IGlzIHRvZGF5Lg0KSW1hZ2UNCkNFTCChWCAwNS8wOS8yMDIzIDY6MTUgQU0NCnNlY29uZGFyeSBvd25lcg0KPz8NCnd0Zj8NClphQ2sgoVggMDUvMDkvMjAyMyA2OjUxIEFNDQpzZWNvbmRhcnkgb3duZXI/Pw0Kd2hvIGRmDQpraXJ1IKFYIDA1LzA5LzIwMjMgNzowMiBBTQ0KVGhpcyBtYW4geXVraSBpcyBiYWNrDQprYXkgoVggMDUvMDkvMjAyMyA4OjEzIEFNDQpqdXMgc21pbGUgbiBub2QgeWFsbCANClphQ2sgoVggMDUvMDkvMjAyMyAxMjozMSBQTQ0KQGhlcmUgZ2FtZSB3aWxsIGJlIGJhY2sgc29vbg0KYWxsIHByb2R1Y3RzIGFyZSBzYXZlZA0KWmFDayChWCAwNS8wOS8yMDIzIDQ6MDQgUE0NCkBldmVyeW9uZQ0KYmFjayB1cA0KaHR0cHM6Ly93d3cucm9ibG94LmNvbS9nYW1lcy8xMzM5NzU5Mzg1NS9EQVQtQ09ERS1CQUNLVVAtRU1PSklTDQpSb2Jsb3gNCkRBVCBbQ09ERTogIkJBQ0tVUCIgKyBFTU9KSVMhXQ0KQ2hlY2sgb3V0IERBVCBbQ09ERTogIkJBQ0tVUCIgKyBFTU9KSVMhXS4gSXShpnMgb25lIG9mIHRoZSBtaWxsaW9ucyBvZiB1bmlxdWUsIHVzZXItZ2VuZXJhdGVkIDNEIGV4cGVyaWVuY2VzIGNyZWF0ZWQgb24gUm9ibG94Lg0Ka2F5IKFYIDA1LzA5LzIwMjMgNTo0MSBQTQ0KZXoNCmV4dHVuZXMgoVggMDUvMDkvMjAyMyA2OjQzIFBNDQpleg0KRHlsYW4gLSBEbyBub3QgcGluZyChWCAwNS8xMC8yMDIzIDEyOjI2IEFNDQpROiBNeSBnYW1lIHBhc3NlcyBhcmVuJ3Qgd29ya2luZy4gV2h5Pw0KQTogWW91ciBnYW1lIHBhc3NlcyB3aWxsIGJlIHRyYW5zZmVycmVkIHRvIHRoZSBuZXcgZ2FtZS4gSXQgaGFzIHJlY2VudGx5IGJlZW4gcHVibGlzaGVkLCBzbyBwbGVhc2UgZ2l2ZSBpdCBzb21lIHRpbWUuDQoNClE6IE5vLCBJIGFtIG5vdCB3YWl0aW5nLiBSZWZ1bmQgbXkgZ2FtZSBwYXNzZXMhISExITEhDQpBOiBVbmZvcnR1bmF0ZWx5LCB3ZSBjYW5ub3QgaXNzdWUgYSByZWZ1bmQuIEdhbWUgZGV2ZWxvcGVycyBoYXZlIHRoZSByaWdodCB0byBkaXNjb250aW51ZSwgZGVsZXRlLCBvciBjaGFuZ2UgYW55IGdhbWUgcGFzcyB3aXRob3V0IGdpdmluZyBhIHJlZnVuZC4gQWRkaXRpb25hbGx5LCBpdCB3b3VsZCBiZSBkaWZmaWN1bHQgdG8gcmVmdW5kIHRob3VzYW5kcyBvZiBwZW9wbGUgZm9yIHRoZWlyIGdhbWUgcGFzc2VzLg0KDQpROiBXaWxsIHRoZSBnYW1lIGJlIHRha2VuIGRvd24gYWdhaW4/IEkgd2FudCB0byBidXkgc29tZSBnYW1lIHBhc3Nlcy9wcm9kdWN0cywgYnV0IEknbSBjb25jZXJuZWQgdGhlIGdhbWUgd2lsbCBiZSBETUNBJ2QgYWdhaW4uDQpBOiBZZXMsIHRoZSBnYW1lIGNhbiBiZSB0YWtlbiBkb3duIGZyZXF1ZW50bHkuIEhvd2V2ZXIsIHlvdSBkb24ndCBoYXZlIHRvIHdvcnJ5IGFib3V0IGxvc2luZyB5b3VyIGdhbWUgcGFzc2VzL3Byb2R1Y3RzLiBXZSBzYXZlIGFsbCBnYW1lIHBhc3MvcHJvZHVjdCBkYXRhIGluIGV4dGVybmFsIHN0b3JhZ2UsIGFuZCB0aGUgZGF0YSB3aWxsIGJlIHJlbG9hZGVkIHRvIHlvdXIgYWNjb3VudCB3aGVuIHdlIHJlLXVwbG9hZCB0aGUgZ2FtZS4NCg0KRmVlbCBmcmVlIHRvIGFzayBhbnkgb3RoZXIgcXVlc3Rpb25zIHlvdSBtYXkgaGF2ZSBhYm91dCB0aGUgZ2FtZSwgYW5kIHdlJ2xsIGRvIG91ciBiZXN0IHRvIGhlbHAgeW91IG91dC4gDQpDRUwgoVggMDUvMTMvMjAyMyAxMToyOSBBTQ0KQGV2ZXJ5b25lDQoNCkhlbGxvIGV2ZXJ5Ym9keSwgSSBhbSBleHRyZW1lbHkgZXhjaXRlZCB0byBhbm5vdW5jZSB0aGF0IEkgYW0gbm93IGFuIG9mZmljaWFsIGRldmVsb3BlciBmb3IgRGF0IEhvb2QgKG9uIFJPQkxPWCkgOnN0dWRpbzogDQpJIGhhdmUgYmVlbiBncmFudGVkIGFjY2VzcyB0byB0aGUgZ2FtZSBvbiBST0JMT1ggU3R1ZGlvIGFuZCB3aWxsIGJlIHdvcmtpbmcgb24gcmVzb2x2aW5nIGFueSBleGlzdGluZyBidWdzIGFuZCBpbXBsZW1lbnRpbmcgbmV3IGZlYXR1cmVzLg0KQWRkaXRpb25hbGx5LCBJIGFtIHBsYW5uaW5nIHRvIGludHJvZHVjZSBhIG5ldyB1cGRhdGUgdGhhdCB3aWxsIGxpa2VseSBpbmNsdWRlIG5ldyBza2lucywgbWFwIGNoYW5nZXMgYW5kIHBvc3NpYmx5LCBraW5kbHkgcmVwb3J0IGFueSBidWdzIHlvdSBjb21lIGFjcm9zcyBhbmQgc2hhcmUgeW91ciBzdWdnZXN0aW9ucyBmb3IgdGhlIHVwY29taW5nIHVwZGF0ZSBpbiB0aGUgc3VnZ2VzdGlvbnMgY2hhbm5lbCANCg0KVGhhbmsgeW91IC0gQENFTA0KZG9uJ3QgYXNrIG1lIHRvIGZpeCB0aGUgZ3VuIHNraW5zIHRhYiwgaSdtIHdlbGwgYXdhcmUgb2YgdGhhdCBhbmQgYW0gZml4aW5nIGl0DQprYXkgoVggWWVzdGVyZGF5IGF0IDEwOjE2IEFNDQpIQVBQWSBNT1RIRVJTIERBWSBUTyBFVkVSWU9ORVMgQklHIEJPT1RZIE1PTU1BUw0KWmFub20gfCBkbSByZXBvcnRzIKFYIFllc3RlcmRheSBhdCAxMDoxOSBBTQ0KR29vZCBkYXkgdG8gZ2V0IG9mZiByb2Jsb3ggYW5kIHNwZW5kIGl0IHdpdGggeW91ciBtb3RoZXJzISENCkR5bGFuIC0gRG8gbm90IHBpbmcgoVggVG9kYXkgYXQgMTI6MzMgQU0NCkhpIGd1eXMgSSBhbHNvIHdpc2ggeW91IGd1eXMgZ29vZCB0aW1lIHdpdGggeW91ciBtb3RoZXJzDQpBbHNvIGl0J3MgYSBnb29kIHRpbWUgdG8gYXNrIGZvciBhIHJvYmxveCBnaWZ0Y2FyZCBmcm9tIHRoZW0hDQpDRUwgoVggVG9kYXkgYXQgMTA6NDQgQU0NCnRoaXMgcmVsZWFzZWQgYnR3DQpJbWFnZQ0Kb2ggdSBkb250IGhhdmUgaXQ/DQpDRUwgoVggVG9kYXkgYXQgMTA6NTIgQU0NCmFsc28gdGhleXJlIGFkZGluZyBhY3Rpdml0aWVzIHRvIGRtcw0KdG9kYXkNCmFuZCBzb21lIHByaWRlIGV2ZW50cw0KaW4ganVuZQ0K  SOFTWARE-EXT3-EXPLOITAFDDAAA-= col* wrap:
